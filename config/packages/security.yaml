security:
  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  encoders:
    App\Entity\Person:
      algorithm: auto

  providers:
    app_user_provider:
      entity:
        class: App\Entity\Person
        property: email
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      anonymous: true
      lazy: true
      provider: app_user_provider

      form_login:
        # The route name that the login form submits to
        check_path: login
        # The name of the route where the login form lives
        # When the user tries to access a protected page, they are redirected here
        login_path: login
        # Secure the login form against CSRF
        # Reference: https://symfony.com/doc/current/security/csrf.html#csrf-protection-in-login-forms
        csrf_token_generator: security.csrf.token_manager
        # The page users are redirect to when there is no previous page stored in the
        # session (for example when the users access directly to the login page).
        default_target_path: me

      logout:
        # The route name the user can go to in order to logout
        path: logout

      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#firewalls-authentication

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    - { path: '/profile', roles: ROLE_USER }
    - { path: '/me', roles: ROLE_USER }
    - { path: '/chat', roles: ROLE_USER }
    - { path: '/post', roles: ROLE_USER }

